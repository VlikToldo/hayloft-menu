{"version":3,"file":"static/js/864.89cb133c.chunk.js","mappings":"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","sources":["components/Form/FormAddKitchen/initialState.js","webpack://hayloft-menu/./src/components/Form/FormAddKitchen/form-add-kitchen.module.scss?cbb8","components/Form/FormAddKitchen/FormAddKitchen.jsx","components/Form/FormAddBar/initialState.js","webpack://hayloft-menu/./src/components/Form/FormAddBar/form-add-bar.module.scss?d98d","shared/api/bar.js","components/Form/FormAddBar/FormAddBar.jsx","pages/AddProduct/AddProduct.jsx","shared/api/kitchen.js"],"sourcesContent":["const initialState = {\n    name: '',\n    ingredients: '',\n    souse: '',\n    alergents: '',\n  };\n  \n  export default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form-add-kitchen_form__uNg1C\",\"titleForm\":\"form-add-kitchen_titleForm__O1KrV\",\"boxFormInput\":\"form-add-kitchen_boxFormInput__DfsZv\",\"formLabel\":\"form-add-kitchen_formLabel__B756s\",\"formInput\":\"form-add-kitchen_formInput__x0xbn\",\"errorInput\":\"form-add-kitchen_errorInput__KcaOF\",\"erorrRequired\":\"form-add-kitchen_erorrRequired__bmW2D\"};","import initialState from './initialState';\nimport styles from './form-add-kitchen.module.scss';\nimport { Button } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { Formik, Form, Field } from 'formik';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport { addKitchenProduct } from '../../../shared/api/kitchen';\n\nconst FormAddKitchen = () => {\n  const validateInput = value => {\n    if (!value) {\n      return 'Обовязково';\n    }\n  };\n  return (\n    <div>\n      <h2 className={styles.titleForm}>Кухня</h2>\n      <Formik\n        initialValues={{...initialState}}\n        onSubmit={ async (values, { resetForm }) => {\n          console.log(values);\n          toast.promise(\n            addKitchenProduct(values),\n             {\n               loading: 'Додаєм...',\n               success: <p>Збережено</p>,\n               error: <p>Виникла помилка при збережені!!</p>,\n             }\n           );\n           resetForm()\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.form}>\n            {/* Найменування */}\n            <label\n              className={classnames(styles.formLabel, {\n                [styles.errorLabel]: errors.name && touched.name,\n              })}\n            >\n              Найменування\n            </label>\n            {errors.name && touched.name && <div className={styles.erorrRequired}>{errors.name}</div>}\n            <Field\n              className={classnames(styles.formInput, {\n                [styles.errorInput]: errors.name && touched.name,\n              })}\n              name=\"name\"\n              validate={validateInput}\n            />\n            {/* Інгрідієнти */}\n            <label\n              className={classnames(styles.formLabel, {\n                [styles.errorLabel]: errors.ingredients && touched.ingredients,\n              })}\n            >\n              Інгрідієнти\n            </label>\n            {errors.ingredients && touched.ingredients && <div className={styles.erorrRequired}>{errors.ingredients}</div>}\n            <Field\n              className={classnames(styles.formInput, {\n                [styles.errorInput]: errors.ingredients && touched.ingredients,\n              })}\n              name=\"ingredients\"\n              validate={validateInput}\n            />\n            {/* Соуси */}\n            <label\n              className={classnames(styles.formLabel, {\n                [styles.errorLabel]: errors.souse && touched.souse,\n              })}\n            >\n              Соуси\n            </label>\n            <Field\n              className={classnames(styles.formInput, {\n                [styles.errorInput]: errors.souse && touched.souse,\n              })}\n              name=\"souse\"\n            />\n            {/* Алергени */}\n            <label\n              className={classnames(styles.formLabel, {\n                [styles.errorLabel]: errors.alergents && touched.alergents,\n              })}\n            >\n              Алергени\n            </label>\n            <Field\n              className={classnames(styles.formInput, {\n                [styles.errorInput]: errors.alergents && touched.alergents,\n              })}\n              name=\"alergents\"\n\n            />\n\n            <Button type=\"submit\">Додати</Button>\n          </Form>\n        )}\n      </Formik>\n      <div>\n        <Toaster\n          position=\"top-center\"\n          reverseOrder={false}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormAddKitchen;\n","const initialState = {\n    name: '',\n    ingredients: '',\n    alcohol: ''\n  };\n  \n  export default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form-add-bar_form__5u10o\",\"titleForm\":\"form-add-bar_titleForm__8dxVb\",\"boxFormInput\":\"form-add-bar_boxFormInput__myXIH\",\"formLabel\":\"form-add-bar_formLabel__6XV0D\",\"formInput\":\"form-add-bar_formInput__BqWgn\",\"errorInput\":\"form-add-bar_errorInput__qi6X9\",\"erorrRequired\":\"form-add-bar_erorrRequired__Vwmgp\"};","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://backend-loft.onrender.com/api/bar'\n});\n\nexport const getAllBar = async () => {\n    const {data: result} = await instance.get('');\n    console.log(result);\n    return result;\n}\n\nexport const addBarProduct = async (data) => {\n    const {data: result} = await instance.post('', data);\n    console.log(result);\n    return result;\n}\n\nexport const deleteBarProduct = async () => {\n    const {data: result} = await instance.get('');\n    console.log(result);\n    return result;\n}\n\n","import initialState from './initialState';\nimport styles from './form-add-bar.module.scss';\nimport { Button } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { Formik, Form, Field } from 'formik';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport { addBarProduct } from '../../../shared/api/bar';\n\nconst FormAddBar = () => {\n  const validateInput = value => {\n    if (!value) {\n      return 'Обовязково';\n    }\n  };\n  return (\n    <div>\n      <h2 className={styles.titleForm}>Бар</h2>\n      <Formik\n        initialValues={{...initialState}}\n        onSubmit={ async (values, { resetForm }) => {\n          console.log(values);\n          toast.promise(\n            addBarProduct(values),\n             {\n               loading: 'Додаєм...',\n               success: <p>Збережено</p>,\n               error: <p>Виникла помилка при збережені!!</p>,\n             }\n           );\n           resetForm()\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.form}>\n            {/* Найменування */}\n            <label\n              className={classnames(styles.formLabel, {\n                [styles.errorLabel]: errors.name && touched.name,\n              })}\n            >\n              Найменування\n            </label>\n            {errors.name && touched.name && <div className={styles.erorrRequired}>{errors.name}</div>}\n            <Field\n              className={classnames(styles.formInput, {\n                [styles.errorInput]: errors.name && touched.name,\n              })}\n              name=\"name\"\n              validate={validateInput}\n            />\n            {/* Інгрідієнти */}\n            <label\n              className={classnames(styles.formLabel, {\n                [styles.errorLabel]: errors.ingredients && touched.ingredients,\n              })}\n            >\n              Інгрідієнти\n            </label>\n            {errors.ingredients && touched.ingredients && <div className={styles.erorrRequired}>{errors.ingredients}</div>}\n            <Field\n              className={classnames(styles.formInput, {\n                [styles.errorInput]: errors.ingredients && touched.ingredients,\n              })}\n              name=\"ingredients\"\n              validate={validateInput}\n            />\n            {/* Соуси */}\n            <label\n              className={classnames(styles.formLabel, {\n                [styles.errorLabel]: errors.alcohol && touched.alcohol,\n              })}\n            >\n              Алкоголь\n            </label>\n            <Field\n              className={classnames(styles.formInput, {\n                [styles.errorInput]: errors.alcohol && touched.alcohol,\n              })}\n              name=\"alcohol\"\n            />\n            <Button type=\"submit\">Додати</Button>\n          </Form>\n        )}\n      </Formik>\n      <div>\n        <Toaster\n          position=\"top-center\"\n          reverseOrder={false}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormAddBar;","import { useState } from \"react\";\nimport FormAddKitchen from \"../../components/Form/FormAddKitchen/FormAddKitchen\";\nimport FormAddBar from \"../../components/Form/FormAddBar/FormAddBar\";\nimport { Button } from \"react-bootstrap\";\nconst AddProduct = () => {\n\n  const [show, setShow] = useState({showFormBar: false, showFormKitchen: true});\nconst openFormBar = () => {\n  setShow({showFormBar: true, showFormKitchen: false})\n}\n\nconst openFormKitchen = () => {\n  setShow({showFormBar: false, showFormKitchen: true})\n}\n  return (\n    <div>\n    <Button onClick={openFormBar}>Додати бар</Button>\n    <Button onClick={openFormKitchen}>Додати кухню</Button>\n    {show.showFormBar && <FormAddBar/>}\n    {show.showFormKitchen && <FormAddKitchen/>}\n    </div>\n  );\n};\n\nexport default AddProduct;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL:\n     'http://localhost:3001/api/kitchen'\n    // 'https://backend-loft.onrender.com/api/kitchen'\n});\n\nexport const getAllKitchen = async () => {\n    const {data: result} = await instance.get('');\n    console.log(result);\n    return result;\n}\n\nexport const addKitchenProduct = async(data) => {\n    const {data: result} = await instance.post('/', data);\n    console.log(result);\n    return result;\n}\n\nexport const deleteKitchenProduct = async () => {\n    const {data: result} = await instance.get('');\n    console.log(result);\n    return result;\n}"],"names":["name","ingredients","souse","alergents","validateInput","value","_jsxs","children","_jsx","className","styles","Formik","initialValues","_objectSpread","initialState","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","wrap","_context","prev","next","console","log","toast","addKitchenProduct","loading","success","error","stop","_x","_x2","apply","arguments","_ref3","errors","touched","Form","classnames","_defineProperty","Field","validate","Button","type","Toaster","position","reverseOrder","alcohol","instance","axios","baseURL","addBarProduct","_callee2","data","_yield$instance$post","result","_context2","post","sent","abrupt","_useState","useState","showFormBar","showFormKitchen","_useState2","_slicedToArray","show","setShow","onClick","FormAddBar","FormAddKitchen","getAllKitchen","_yield$instance$get","get"],"sourceRoot":""}